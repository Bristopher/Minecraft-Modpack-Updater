name: Update Modpack Release and Version

permissions:
  contents: write

on:
  release:
    types: [published]  # Runs when a new release is published
  workflow_dispatch:  # Allows manual trigger

jobs:
  update-release-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Set up Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"

      - name: Extract Release Version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION=${{ github.event.release.tag_name }}
            VERSION=${VERSION#v}  # Remove 'v' if present (e.g., v0.27 -> 0.27)
            echo "Detected release version: $VERSION"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "No release version detected, manually specifying version."
            VERSION="0.29"  # Change this to the version you want for manual runs
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          fi

      - name: Create Directory and File
        run: |
          # Create the directory for the version if it doesn't exist
          mkdir -p Minecraft-Modpack-Updater/Updater/$VERSION
          # Create the file with the link to the release EXE
          echo "https://github.com/Bristopher/Minecraft-Modpack-Updater/releases/download/$VERSION/Bristopher_Modpack_Updater_v$VERSION.exe" > Minecraft-Modpack-Updater/Updater/$VERSION/Bristopher_Modpack_Updater.txt
          echo "Link to EXE created at Minecraft-Modpack-Updater/Updater/$VERSION/Bristopher_Modpack_Updater.txt"
          
          # List the directory to check if the file is created
          ls -R Minecraft-Modpack-Updater

      - name: Update Application Version Link
        run: |
          # Update the modpack-updater-application_version.txt with the raw link to the new file
          echo "https://raw.githubusercontent.com/Bristopher/Minecraft-Modpack-Updater/main/Minecraft-Modpack-Updater/Updater/$VERSION/Bristopher_Modpack_Updater.txt" > modpack-updater-application_version.txt
          echo "Updated modpack-updater-application_version.txt with the raw link to the new file."
          
          # List the root directory to check the file creation
          ls -l

      - name: Commit and Push Changes
        run: |
          git add .
          git commit -m "Update modpack version and release files for version $VERSION" || echo "No changes to commit"
          # Fetch latest changes and rebase
          git pull --rebase origin main || echo "No changes to pull"
          # Push to the 'main' branch
          git push origin HEAD:main
